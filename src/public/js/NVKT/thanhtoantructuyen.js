async function savePhieuThanhToan(){
  try {
    const DaGuiPhieu = document.getElementById("given").value.trim();
    if (DaGuiPhieu === "ƒê√£ g·ª≠i") {
      alert("ƒê√£ t·ª´ng g·ª≠i phi·∫øu thanh to√°n.");
      return;
    } 
    const maDangKy = document.getElementById("maDangKy").value.trim();
    const TongTien = Number(document.getElementById("tongTien").value);
    const TiemGiam = Number(document.getElementById("giamGia").value);
    const ThanhTien = Number(document.getElementById("thanhTien").value);

    const NVKeToanLap = sessionStorage.getItem("userID") || null;
    const response = await fetch(`/NVKT/PhieuThanhToan/luuphieuthanhtoan`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ maDangKy, TongTien, TiemGiam, ThanhTien, NVKeToanLap })
    });

    if (!response.ok) {
      throw new Error("Kh√¥ng th·ªÉ l∆∞u h√≥a ƒë∆°n.");
    }
    const result = await response.json();
    if (result.error) {
      throw new Error(result.error);
    }
  } catch (error) {
    console.error("L·ªói l∆∞u phi·∫øu thanh to√°n:", error);
    alert("ƒê√£ x·∫£y ra l·ªói khi l∆∞u phi·∫øu thanh to√°n.");
  }
}

async function prinPhieuThanhToanPDF() {
  try {
    const { jsPDF } = window.jspdf;

    const contentToPrint = document.createElement("div");
    contentToPrint.innerHTML = `
      <div style="border: 1px solid #ccc; border-radius: 6px; padding: 16px; font-family: sans-serif;">
        <h2 style="font-weight:600; margin-bottom: 8px;">Th√¥ng tin kh√°ch h√†ng</h2>
        <div style="display: grid; grid-template-columns: repeat(2, 1fr); row-gap: 8px; font-size: 14px;">
          <span>T√™n ƒë∆°n v·ªã: <span style="font-weight:600;">${document.getElementById("hoten").value}</span></span>
          <span>T·ªïng ti·ªÅn: <span style="font-weight:600;">${document.getElementById("tongTien").value}</span></span>
          <span>Email: <span style="font-weight:600;">${document.getElementById("email").value}</span></span>
          <span>Ti·ªÅn gi·∫£m: <span style="font-weight:600;">${document.getElementById("giamGia").value}</span></span>
          <span>S·ªë l∆∞·ª£ng: <span style="font-weight:600;">${document.getElementById("soLuong").value}</span></span>
          <span>Th√†nh ti·ªÅn: <span style="font-weight:600;">${document.getElementById("thanhTien").value}</span></span>
        </div>

        <h2 style="font-size: 16px; font-weight:600; margin-top: 16px;">Th√¥ng tin ƒëƒÉng k√Ω</h2>
        <div style="border: 1px solid #ccc; margin-top: 8px; max-height: 220px; overflow-y: auto; padding: 8px; background-color: white;">
          ${Array.from(document.querySelectorAll("#dsBaiThi > div")).map(div => `
            <div style="border:1px solid #ddd; padding:5px; margin-bottom:8px;">
              ${div.innerHTML}
            </div>
          `).join("")}
        </div>

        <p style="font-size: 13px; margin-top: 12px; color: #555;">
          L∆∞u √Ω: Vui l√≤ng thanh to√°n sau 3 ng√†y nh·∫≠n ƒë∆∞·ª£c phi·∫øu thanh to√°n. <br/>
          N·∫øu kh√¥ng s·∫Ω b·ªã h·ªßy ƒëƒÉng k√Ω thi.
        </p>
      </div>
    `;

    contentToPrint.style.padding = "10px";
    contentToPrint.style.width = "800px";
    document.body.appendChild(contentToPrint);

    const canvas = await html2canvas(contentToPrint, { scale: 2 });
    const imgData = canvas.toDataURL("image/png");

    const pdf = new jsPDF("p", "mm", "a4");
    const pdfWidth = 210;
    const pdfHeight = (canvas.height * pdfWidth) / canvas.width;
    pdf.addImage(imgData, "PNG", 0, 0, pdfWidth, pdfHeight);

    const fileName = `PhieuThanhToan_${document.getElementById("maDangKy").value}.pdf`;

    // üíæ L∆∞u v·ªÅ m√°y
    pdf.save(fileName);

    // üì© G·ª≠i v·ªÅ server
    const pdfBlob = pdf.output("blob");
    const formData = new FormData();
    formData.append("pdf", pdfBlob, fileName);
    formData.append("email", document.getElementById("email").value);
    formData.append("hoten", document.getElementById("hoten").value);
    document.body.removeChild(contentToPrint)
    const response = await fetch("/NVKT/SendEmail", {
      method: "POST",
      body: formData
    });

    if (!response.ok) {
      alert("Kh√¥ng th·ªÉ g·ª≠i phi·∫øu thanh to√°n qua email.");
      return
    }

    alert("Phi·∫øu thanh to√°n ƒë√£ ƒë∆∞·ª£c g·ª≠i qua email!");
  } catch (error) {
    console.error("L·ªói:", error);
    alert("C√≥ l·ªói x·∫£y ra khi t·∫°o ho·∫∑c g·ª≠i phi·∫øu thanh to√°n.");
  }
}

async function DuyetPhieuThanhToan() {
  try {
    const TinhTrangThanhToan = document.getElementById("tinhTrang").value.trim();
    if (TinhTrangThanhToan === "ƒê√£ thanh to√°n") {
      return;
    } 

    const maDangKy = document.getElementById("maDangKy").value.trim();
    const maThanhToan = document.getElementById("maThanhToan").value.trim();
    const TinhTrangDuyet = 1;
    const response = await fetch(`/NVKT/PhieuThanhToan/duyetphieuthanhtoan?maDangKy=${encodeURIComponent(maDangKy)}`, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ maThanhToan, TinhTrangDuyet })
    });
    if (!response.ok) {
      throw new Error("Kh√¥ng th·ªÉ duy·ªát phi·∫øu thanh to√°n.");
    }
    const result = await response.json();
    if (result.error) {
      throw new Error(result.error);
    }
    alert("ƒê√£ duy·ªát phi·∫øu thanh to√°n th√†nh c√¥ng!");
  } catch (error) {
    console.error("L·ªói duy·ªát phi·∫øu thanh to√°n:", error);
    alert("ƒê√£ x·∫£y ra l·ªói khi duy·ªát phi·∫øu thanh to√°n.");
  }
}

async function btnGuiPhieuThanhToan_Click() {
  const maDangKyInput = document.getElementById("maDangKy");
  const maDangKy = maDangKyInput.value.trim();
  if (!maDangKy) {
    alert("Vui l√≤ng nh·∫≠p m√£ ƒëƒÉng k√Ω.");
    return;
  }
  savePhieuThanhToan();
  prinPhieuThanhToanPDF();
  getPhieuThanhToan(maDangKy);
}

async function getPhieuThanhToan(maDangKy) {
  const daguiSpan = document.getElementById("given");
  const ngayguiSpan = document.getElementById("ngayGui");
  try {
    const response = await fetch(`/NVKT/PhieuThanhToan?maDangKy=${encodeURIComponent(maDangKy)}`);
    if (!response.ok) {
      throw new Error("Kh√¥ng t√¨m th·∫•y phi·∫øu thanh to√°n.");
    }
    const phieuThanhToan = await response.json();
    if (!phieuThanhToan || Object.keys(phieuThanhToan).length === 0) {
      alert("Phi·∫øu thanh to√°n kh√¥ng t·ªìn t·∫°i ho·∫∑c ch∆∞a ƒë∆∞·ª£c t·∫°o.");
    }
    phieuThanhToan.NgayLap = new Date(phieuThanhToan.NgayLap).toLocaleDateString("vi-VN")
    daguiSpan.value = "ƒê√£ g·ª≠i" || "Kh√¥ng r√µ";
    ngayguiSpan.value = phieuThanhToan.NgayLap || "Kh√¥ng r√µ";
  } catch (error) {
    console.error("L·ªói khi l·∫•y phi·∫øu thanh to√°n:", error);
    daguiSpan.value = "Ch∆∞a g·ª≠i" || "Kh√¥ng r√µ";
    ngayguiSpan.value = "Kh√¥ng r√µ";
  }
}

async function loadForm() {
  const dialog = document.getElementById("dialogThanhToan");
  const maDangKyInput = document.getElementById("maDangKy");
    const maDangKy = maDangKyInput.value.trim();
    if (!maDangKy) {
      alert("Vui l√≤ng nh·∫≠p m√£ ƒëƒÉng k√Ω.");
      return;
    }

    const loaiKhachHang = document.getElementById("loaiKhachHang");
    const loaiKH = loaiKhachHang.value.trim();
    if (loaiKH !== "ƒê∆°n V·ªã") {
      alert("Kh√¥ng th·ªÉ thanh to√°n tr·ª±c tuy·∫øn cho lo·∫°i kh√°ch h√†ng n√†y.");
      return;
    }
    getPhieuThanhToan(maDangKy);
    dialog.classList.remove("hidden");
    dialog.classList.add("flex");
}

async function btnDuyetPhieuThanhToan_Click() {
  const maDangKyInput = document.getElementById("maDangKy");
  if (!document.getElementById("maThanhToan").value||!document.getElementById("tienNhanDialog").value || document.getElementById("tienNhanDialog").value < Number(document.getElementById("thanhTien").value)) {
    alert("Vui l√≤ng ƒëi·ªÅn th√¥ng tin m√£ ƒëƒÉng k√Ω v√† ti·ªÅn nh·∫≠n ƒë·∫ßy ƒë·ªß.");
    return;
  }
  const DaGuiPhieu = document.getElementById("given").value.trim();
  if (DaGuiPhieu !== "ƒê√£ g·ª≠i") {
    alert("Ch∆∞a g·ª≠i phi·∫øu thanh to√°n, kh√¥ng th·ªÉ duy·ªát.");
    return;
  }
  const maDangKy = maDangKyInput.value.trim();
  if (!maDangKy) {
  alert("Vui l√≤ng nh·∫≠p m√£ ƒëƒÉng k√Ω.");
  return;
  }
  DuyetPhieuThanhToan();
  updateTinhTrangThanhToan();
  saveHoaDon();
  printHoaDonPDF();
  btnTimKiem_Click();
}

document.addEventListener("DOMContentLoaded",function () {

    document.getElementById("guiPhieuThanhToan").addEventListener("click",async function () {
      btnGuiPhieuThanhToan_Click()
    });

    document.getElementById("duyetPhieuThanhToan").addEventListener("click",async function () {
      const tienNhan = Number(document.getElementById("tienNhanDialog").value);
      if (isNaN(tienNhan)) {
        alert("Ti·ªÅn nh·∫≠n kh√¥ng h·ª£p l·ªá.");
        return;
      }
      btnDuyetPhieuThanhToan_Click()
    });
});